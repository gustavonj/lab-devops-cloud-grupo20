# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    name: "CI - Build"
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Requirements
        run:  pip install flask flask-wtf pytest pytest-cov

      - name: Run Unit Tests 
        run: |
          coverage run --source=app -m pytest test.py
          coverage report -m
          coverage xml -i

      - name: "Heroku :: Login to Heroku Container registry"
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login    

      - name: "Heroku :: Docker Build Image & Push to Heroku Registry"
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web  

      - name: "Google Cloud :: Docker Login"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
          ARTIFACT_REGISTRY:  ${{ secrets.ARTIFACT_REGISTRY}}
        run: | 
          echo '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin ${{ secrets.ARTIFACT_REGISTRY }}

      - name: "Google Cloud :: Docker Build Image & Push to Artifact Registry"
        env: 
          ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
        run: | 
          docker build -t ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest .
          docker push ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest  

  DeployHomolog:
    needs: Build
    runs-on: ubuntu-latest
    name: "CD - Release Homologacao on Heroku"
    steps:
      - name: "Heroku :: Deploy Application"
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web  

  DeployProduction:
    needs: DeployHomolog
    runs-on: ubuntu-latest
    name: "CD - Release Producao on Google Cloud App Engine"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: "Google Cloud :: Auth AppEngine"
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}'

      - name: "Google Cloud :: Deploy to App Engine"
        id: appengine
        env: 
          ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
        uses: 'google-github-actions/deploy-appengine@v0'
        with:
          image_url: ${{ secrets.ARTIFACT_REGISTRY_REPO }}/myapp:latest

      - name: "Google Cloud :: Smoke Test"
        run: 'curl "${{ steps.appengine.outputs.url }}"'          
